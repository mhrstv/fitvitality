<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="vLine1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAEAAAFjCAYAAAD8XmFsAAAABGdBTUEAALGPC/xhBQAAABxJREFUOE9j
        WLFixf9RYpQYJUaJUWKUGM7Eiv8ABtwcwlb1rTYAAAAASUVORK5CYII=
</value>
  </data>
  <data name="bmiDescription.Text" xml:space="preserve">
    <value>The Body Mass Index is a 
measurement of a
person's leanness based on
their height and weight.  
Specifically, the value obtained 
from the calculation of BMI is 
used to categorize whether a 
person is underweight, normal 
weight, overweight, or obese 
depending on what range the 
value falls between.</value>
  </data>
  <data name="bmiBackground.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQQAAACkCAYAAABxY1BQAAAABGdBTUEAALGPC/xhBQAABF1JREFUeF7t
        3E9PE2schuH5/p/iYOLCoxsS9kaXxiWrI/+bALFagjW2EZI550fSJwVeBDTmyMy1uFYzDWyeO51pZrrv
        l5f9r5h+W/Tbs1n/9uS03zqc9H/v7ffPd/b6v/7ZAX6T2lhtrTZX26sN1hZbG32MnwrC2XLZv59+6l/t
        HzT/WeD/UZusbdZGW9u9z6OC8Hmx6N8cn/YbH3ab/wzwZ6iN1lZrs60t3+VBQVhcXFxV55kQwJNSm63t
        1oZb277p3iBUYTYPjpp/DHgaasMP+bbwwyAczuduEMJA1JYPv8ybW1+5Mwg75+cuEWBgatO17dbmSzMI
        k/lXMYCBqm3XxlvbvxWEus5wmQDDVhtv3VO4FoS6E7l56AYijEFt/eavD9eCUD9PtD4IDFNtfr0BCUJ9
        fXDfAMalNr9+6ZAgvD4+aX4AGLba/rUgzBbLfqNxIjB8tf1qQILw7uO0eSIwDtWABOHlnqcWYcyqAVdB
        qGeoWycA41It6LZnZ82DwLjUS1a6ettK6yAwLtWCbuto0jwIjEu1oHuxu988CIxLvaOx8yATUKoFXesA
        ME6CAIQgACEIQAgCEIIAhCAAIQhACAIQggCEIAAhCEAIAhCCAIQgACEIQAgCEIIAhCAAIQhACAIQggCE
        IAAhCEAIAhCCAIQgACEIQAgCEIIAhCAAIQhACAIQggCEIAAhCEAIAhCCAIQgACEIQAgCEIIAhCAAIQhA
        CAIQggCEIAAhCEAIAhCCAIQgACEIQAgCEIIAhCAAIQhACAIQggCEIAAhCEAIAhCCAIQgACEIQAgCEIIA
        hCAAIQhACAIQggCEIAAhCEAIAhCCAIQgACEIQAgCEIIAhCAAIQhACAIQggCEIAAhCEAIAhCCAIQgACEI
        QAgCEIIAhCAAIQhACAIQggCEIAAhCEAIAhCCAIQgACEIQAgCEIIAhCAAIQhACAIQggCEIAAhCEAIAhCC
        AIQgACEIQAgCEIIAhCAAIQhACAIQggCEIAAhCEB0z3f2mgeAcakWdC9295sHgXGpFnRbR5PmQWBcqgXd
        25PT5kFgXKoF3fZs1jwIjEu1oJt+WzQPAuNSLei+X172L/cOmicA41ANqBZcBeHdx2nzJGAcqgEJwmyx
        7DcaJwHDV9uvBiQI5fXxSfNkYNhq+6sOJAifF4v+2Yfd5geAYarN1/ZvBaG8n35qfggYptr8egOuBWFx
        cdFvHhw1PwgMS229Nr/egGtBKPX1wQNPMGy18fVLhZVbQSiT+Vf3E2Cgatu18db2m0EoO+fnogADU5uu
        bbc2X+4MQjn8Mnf5AANRWz74b9Otra/8MAilrjPcaISnrTbcumdw071BKHUnsn6ecAkBT0tttrZ789eE
        uzwoCCtVmDfHp/2GMMAfrTZaW33It4J1jwrCytlyeVWdV56ShD9KbbK2WRttbfc+PxWEdfUMdb1Yod62
        snU4uXovmxuR8HvVxmprtbnaXm2wttja6MNd9v8CKMkoTKYY1EIAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="rotationTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="bmrDescription.Text" xml:space="preserve">
    <value>Your Basal Metabolic Rate 
is the number of calories 
you burn as your body performs 
basic (basal) life-sustaining 
function that are based on your 
activity level (you can change 
that from the settings).
</value>
  </data>
  <data name="calorieDescription.Text" xml:space="preserve">
    <value>The Calorie Calculator is very 
similar to the Basal Metabolic 
Rate calculator. This calculator 
can provide some simple 
guidelines for gaining, losing 
or maintaining weight based
on your activity level.</value>
  </data>
  <data name="macroCalcDescription.Text" xml:space="preserve">
    <value>A macro calculator is a tool
that helps individuals 
determine their 
macronutrient intake based 
on theri weight, height, 
activity, and goals. It 
calculates the amounts of 
proteins, fats, and carbohydrates 
that they should consume.</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>31</value>
  </metadata>
</root>